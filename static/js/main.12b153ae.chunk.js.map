{"version":3,"sources":["components/Card.jsx","components/CardList.jsx","components/SearchBox.jsx","components/Scroll.jsx","components/App.jsx","reportWebVitals.js","index.js"],"names":["Card","props","react_default","a","createElement","className","src","concat","id","alt","name","email","CardList","_ref","robots","map","robo","components_Card","key","SearchBox","onChange","searchInput","type","placeholder","Scroll","style","overflow","border","height","children","App","_useState","useState","filter","_useState2","Object","slicedToArray","state","setState","useEffect","fetch","then","response","json","data","length","components_SearchBox","event","inputSearch","target","value","toLowerCase","prev","includes","components_Scroll","components_CardList","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode","components_App"],"mappings":"6LAYeA,MAVf,SAAcC,GACV,OAAOC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,6DAClBH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UAAUC,IAAG,wBAAAC,OAA0BN,EAAMO,GAAhC,aAA+CC,IAAI,UAC/EP,EAAAC,EAAAC,cAAA,OAAKC,UAAU,IACXH,EAAAC,EAAAC,cAAA,UAAKH,EAAMS,MACXR,EAAAC,EAAAC,cAAA,SAAIH,EAAMU,UCAPC,MAJf,SAAAC,GAA2B,IAARC,EAAQD,EAARC,OACf,OAAOZ,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SAASS,EAAOC,IAAI,SAAAC,GAAI,OAAKd,EAAAC,EAAAC,cAACa,EAAD,CAAMC,IAAKF,EAAKR,GAAIA,GAAMQ,EAAKR,GAAIE,KAAQM,EAAKN,KAAMC,MAAOK,EAAKL,YCI1GQ,MANf,SAAmBlB,GACf,OAAOC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACtBH,EAAAC,EAAAC,cAAA,SAAOgB,SAAUnB,EAAMoB,YAAahB,UAAU,wBAAwBiB,KAAK,SAASC,YAAY,oBCIrFC,MANf,SAAgBvB,GACZ,OAAOC,EAAAC,EAAAC,cAAA,OAAKqB,MAAO,CAACC,SAAS,SAASC,OAAO,oBAAqBC,OAAO,UACpE3B,EAAM4B,iBCoCAC,MAlCf,WAAc,IAAAC,EACaC,mBAAS,CAC5BlB,OAAQ,GACRmB,OAAQ,KAHFC,EAAAC,OAAAC,EAAA,EAAAD,CAAAJ,EAAA,GACLM,EADKH,EAAA,GACCI,EADDJ,EAAA,GAqBV,OARAK,oBAAU,WAENC,MAAM,8CACDC,KAAK,SAAAC,GAAQ,OAAIA,EAASC,SAC1BF,KAAK,SAAAG,GAASN,EAAS,CAACxB,OAAO8B,EAAKX,OAAOW,OAGlD,IACyB,IAAxBP,EAAMvB,OAAO+B,OACL3C,EAAAC,EAAAC,cAAA,MAAIC,UAAU,MAAd,WAEAH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,MACtBH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,MAAd,gBACAH,EAAAC,EAAAC,cAAC0C,EAAD,CAAWzB,YApBf,SAAsB0B,GAClB,IAAIC,EAAcD,EAAME,OAAOC,MAAMC,cACrCb,EAAS,SAACc,GACN,MAAO,CAACtC,OAAOsC,EAAKtC,OAAOmB,OAAQI,EAAMvB,OAAOmB,OAAO,SAAAjB,GAAI,OAAEA,EAAKN,KAAKyC,cAAcE,SAASL,WAkBlG9C,EAAAC,EAAAC,cAACkD,EAAD,KACIpD,EAAAC,EAAAC,cAACmD,EAAD,CAAUzC,OAAQuB,EAAMJ,YCtBrBuB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxCC,EAAAC,EAAA,GAAAnB,KAAAkB,EAAAE,KAAA,UAAqBpB,KAAK,SAAA5B,GAAiD,IAA9CiD,EAA8CjD,EAA9CiD,OAAQC,EAAsClD,EAAtCkD,OAAQC,EAA8BnD,EAA9BmD,OAAQC,EAAsBpD,EAAtBoD,OAAQC,EAAcrD,EAAdqD,QAC3DJ,EAAOL,GACPM,EAAON,GACPO,EAAOP,GACPQ,EAAOR,GACPS,EAAQT,YCADU,IAASC,WAAWC,SAASC,eAAe,SACpDC,OACHrE,EAAAC,EAAAC,cAACF,EAAAC,EAAMqE,WAAP,KACEtE,EAAAC,EAAAC,cAACqE,EAAD,QAOJjB","file":"static/js/main.12b153ae.chunk.js","sourcesContent":["import React from \"react\";\n\nfunction Card(props){\n    return <div className=\"tc bg-light-green dib br3 pa3 ma2 grow shadow-5 roboCards\">\n        <img className=\"roboImg\" src={`https://robohash.org/${props.id}?set=set4`} alt=\"robot\"></img>\n        <div className=\"\">\n            <h3>{props.name}</h3>\n            <p>{props.email}</p>\n        </div>\n    </div>\n}\n\nexport default Card;","import React from \"react\";\nimport Card from \"./Card\";\n\nfunction CardList({robots}){\n    return <div className=\"cards\">{robots.map(robo => (<Card key={robo.id} id = {robo.id} name = {robo.name} email={robo.email}/>))}</div>\n}\n\nexport default CardList;","import React from \"react\";\n\nfunction SearchBox(props){\n    return <div className=\"pa2\">\n    <input onChange={props.searchInput} className=\"pa3 ba bg-light-green\" type=\"search\" placeholder=\"Search Robots\" />\n    </div>\n}\n\nexport default SearchBox;","import React from \"react\";\n\nfunction Scroll(props){\n    return <div style={{overflow:'scroll',border:'3px solid #0096FF', height:'350px'}}>\n        {props.children}\n    </div>\n}\n\nexport default Scroll;","import React, { useState, useEffect } from \"react\";\nimport CardList from \"./CardList\";\nimport SearchBox from \"./SearchBox.jsx\";\nimport Scroll from \"./Scroll\";\nimport './App.css'\n\nfunction App(){\n    let [state,setState] = useState({\n        robots: [],\n        filter: []\n    });\n\n    function updateSearch(event){\n        let inputSearch = event.target.value.toLowerCase();\n        setState((prev)=>{\n            return {robots:prev.robots,filter: state.robots.filter(robo=>robo.name.toLowerCase().includes(inputSearch))}\n        })\n    }\n\n    useEffect(() => {\n        // GET request using fetch inside useEffect React hook\n        fetch('https://jsonplaceholder.typicode.com/users')\n            .then(response => response.json())\n            .then(data => {setState({robots:data,filter:data})});\n    \n    // empty dependency array means this effect will only run once (like componentDidMount in classes)\n    },[]);\n    if(state.robots.length === 0){\n        return <h1 className=\"tc\">Loading</h1>\n    } else {\n        return <div className=\"tc\">\n        <h1 className=\"f1\">Robo Friends</h1>\n        <SearchBox searchInput={updateSearch} />\n        <Scroll>\n            <CardList robots={state.filter}/>\n        </Scroll>\n    </div>\n    }\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './components/App';\nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}